// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/resendEmailOtp": {
            "post": {
                "description": "Resend EmailOTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend EmailOTP",
                "parameters": [
                    {
                        "description": " ",
                        "name": "ResendEmailOtpInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ResendEmailOtpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.SuccessResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Signup",
                "parameters": [
                    {
                        "type": "string",
                        "description": "With the Bearer prefix",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": " ",
                        "name": "CreateUserInput",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.SuccessResponseWithData-database_User"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account Details"
                ],
                "summary": "Get User Account Details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.SuccessResponseWithData-handlers_userBusinessHolder"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Business": {
            "type": "object",
            "properties": {
                "business_avatar": {
                    "type": "string"
                },
                "business_name": {
                    "type": "string"
                },
                "count_id": {
                    "type": "integer"
                },
                "created_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "deleted_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "id": {
                    "type": "string"
                },
                "invoice_count": {
                    "type": "number"
                },
                "owner_id": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                }
            }
        },
        "database.User": {
            "type": "object",
            "properties": {
                "count_id": {
                    "type": "integer"
                },
                "created_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "deleted_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                },
                "email": {
                    "type": "string"
                },
                "email_verified": {
                    "type": "boolean"
                },
                "fullname": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/pgtype.Timestamptz"
                }
            }
        },
        "handlers.CreateUserInput": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handlers.ResendEmailOtpInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "handlers.userBusinessHolder": {
            "type": "object",
            "properties": {
                "business": {
                    "$ref": "#/definitions/database.Business"
                },
                "user": {
                    "$ref": "#/definitions/database.User"
                }
            }
        },
        "pgtype.InfinityModifier": {
            "type": "integer",
            "enum": [
                1,
                0,
                -1
            ],
            "x-enum-varnames": [
                "Infinity",
                "Finite",
                "NegativeInfinity"
            ]
        },
        "pgtype.Timestamptz": {
            "type": "object",
            "properties": {
                "infinityModifier": {
                    "$ref": "#/definitions/pgtype.InfinityModifier"
                },
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "util.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "util.SuccessResponseWithData-database_User": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/database.User"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "util.SuccessResponseWithData-handlers_userBusinessHolder": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handlers.userBusinessHolder"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Blanq Invoice API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
